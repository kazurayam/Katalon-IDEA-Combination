plugins {
    id 'groovy'
}

group = 'io.github.kazurayam'
version = '0.1.1'

static String resolveKatalonStudioInstallationDirectory() {
    OperatingSystem os = OperatingSystem.current()
    if (os.isMacOsX()) {
        return '/Applications/Katalon Studio.app/Contents/Eclipse'
    } else if (os.isWindows()) {
        String userHome = System.getProperty("user.home")
        return "${userHome}/Katalon_Studio_Windows_64-10.2.0"
    } else if (os.isLinux()) {
        throw new UnsupportedOperationException("I don't know")
    } else {
        // Unknown OS
        throw new UnsupportedOperationException("Who knows?")
    }
}

ext {
    KATALON_STUDIO_INSTALLATION_DIRECTORY = resolveKatalonStudioInstallationDirectory()
    GroovyVersion = '3.0.17'
    ARTIFACT_ID = 'my-custom-artifact'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: "${KATALON_STUDIO_INSTALLATION_DIRECTORY}/configuration/resources/lib",
            include: [
                    "groovy-${GroovyVersion}.jar",
                    'browsermob-core-*.jar'
            ]
    )

    implementation fileTree(dir: "${KATALON_STUDIO_INSTALLATION_DIRECTORY}/plugins",
            include: [
                    'com.kms.katalon.core*.jar',
                    'com.kms.katalon.util*.jar',

                    // to import groovy.lang.GroovyObject
                    '**/org.codehaus.groovy*/lib/groovy*-indy.jar',

                    'slf4j*.jar',
                    'org.dom4j*.jar',
                    'com.google.gson*.jar',
                    'org.eclipse.osgi*.jar',
                    'org.apache.commons.lang*.jar',
                    'org.seleniumhq.selenium.selenium-api*.jar',
                    'ch.qos.logback.classic_*.jar',
                    'ch.qos.logback.core_*.jar',
                    'org.apache.commons.commons-io_*.jar',
                    'javassist_*.jar',
                    'org.greenrobot.eventbus_*.jar',
                    'com.google.guava_*.jar',
                    'com.fasterxml.jackson.core.jackson-core_*.jar',
                    'com.networknt.json-schema-validator_*.jar'
            ])

    implementation libs.directoryscanner

    testImplementation libs.junit.jupiter.api
    testImplementation libs.junit.jupiter.engine
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    //testImplementation libs.slf4j.simple
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    useJUnitPlatform()
}

tasks.register('printKatalonInstallation') {
    doLast {
        println KATALON_STUDIO_INSTALLATION_DIRECTORY
    }
}

import org.gradle.internal.os.OperatingSystem
import org.gradle.util.GradleVersion
tasks.register('printVersions') {
    doLast {
        OperatingSystem os = OperatingSystem.current()
        println "${os.toString()}"
        println "Java ${JavaVersion.current()}"
        println "Groovy ${GroovySystem.getVersion()}"
        println GradleVersion.current().toString()
    }
}

tasks.register('printClasspath') {
    group = 'Custom'
    description = "show the entries included in the runtime classpath, sorted alphabetically"
    doLast {
        sourceSets.main.runtimeClasspath.sort().each { println it }
    }
}

groovydoc {
    docTitle = ARTIFACT_ID  + ' ' + project.version + " API"
}

tasks.register("publishGroovydoc", Copy) {
    group = 'Custom'
    description = "copy the Groovydoc files into the rootProject/docs directory to make it publicly accessible"
    from 'build/docs/groovydoc'
    into "${rootProject.projectDir}/docs/api"
}
groovydoc.finalizedBy publishGroovydoc

jar {
    archiveBaseName = "${ARTIFACT_ID}"
    include('io/github/kazurayam/**')
    exclude('internal/**')
}