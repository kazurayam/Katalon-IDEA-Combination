plugins {
    id 'groovy'
}

group = 'io.github.kazurayam'
version = '0.1.0'

import org.gradle.internal.os.OperatingSystem
String resolveKatalonStudioInstallationDirectory() {
    OperatingSystem os = OperatingSystem.current()
    if (os.isMacOsX()) {
        return '/Applications/Katalon Studio.app'
    } else if (os.isWindows()) {
        throw new UnsupportedOperationException('To be considered')
    } else if (os.isLinux()) {
        throw new UnsupportedOperationException("I don't know")
    } else {
        // Unknow OS
        throw new UnsupportedOperationException("Who knows?")
    }
}

ext {
    KATALON_STUDIO_INSTALLATION_DIRECTORY = resolveKatalonStudioInstallationDirectory()
    GroovyVersion = '3.0.17'
    ARTIFACT_ID = 'my-ks-helper'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.kazurayam:monk-directory-scanner:0.1.1'
    implementation fileTree(
            dir: "${KATALON_STUDIO_INSTALLATION_DIRECTORY}/Contents/Eclipse/configuration/resources/lib",
            include: [
                    "groovy-${GroovyVersion}.jar"
            ]
    )
    // look into the `katalon/.classpath` file for the paths of jar to include from the Katalon bundle
    implementation fileTree(dir: "${KATALON_STUDIO_INSTALLATION_DIRECTORY}/Contents/Eclipse/plugins",
            include: [
                    'com.fasterxml.jackson*.jar',
                    'com.google.gson*.jar',

                    // to import com.kms.katalon.core.testobject.TestObject
                    // to import com.kms.katalon.core.testobject.SelectorMethod
                    // to import com.kms.katalon.core.testobject.ObjectRepository
                    'com.kms.katalon.core*.jar',
                    'com.kms.katalon.util*.jar',

                    // to import groovy.lang.GroovyObject
                    '**/org.codehaus.groovy*/lib/groovy*-indy.jar',

                    'org.apache.commons.lang*.jar',
                    'org.dom4j*.jar',
                    'org.eclipse.osgi*.jar',
                    'org.seleniumhq.selenium.selenium-api*.jar',
                    'slf4j*.jar'
            ])

    // will look into the Maven Central repository
    testImplementation("org.testng:testng:7.11.0")
    testImplementation 'org.slf4j:slf4j-simple:2.0.16'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    useTestNG()
}

tasks.register('printVersions') {
    doLast {
        OperatingSystem os = OperatingSystem.current()
        println "OS: ${os.toString()}"
        println "Gradle: ${project.getGradle().getGradleVersion()}"
        println "Groovy: ${GroovySystem.getVersion()}"
    }
}

tasks.register('printClasspath') {
    group = 'Custom'
    description = "show the entries included in the runtime classpath, sorted alphabetically"
    doLast {
        sourceSets.main.runtimeClasspath.sort().each { println it }
    }
}

groovydoc {
    docTitle = ARTIFACT_ID  + ' ' + project.version + " API"
}

tasks.register("publishGroovydoc", Copy) {
    group = 'Custom'
    description = "copy the Groovydoc files into the rootProject/docs directory to make it publicly accessible"
    from 'build/docs/groovydoc'
    into "${rootProject.projectDir}/docs/api"
}
groovydoc.finalizedBy publishGroovydoc

jar {
    archiveBaseName = "${ARTIFACT_ID}"
    include('io/github/kazurayam/**')
    exclude('internal/**')
}